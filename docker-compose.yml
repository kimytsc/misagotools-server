version: '3.7'

services:
  dns:
    container_name: dnsmasq
    restart: always
    build:
      context: ./services/dnsmasq
      dockerfile: andyshinn.Dockerfile
      target: runtime
      args:
        TZ: "Asia/Seoul"
    ports:
      # - 53:53/tcp
      # - 53:53/udp
      - target: 53
        published: 53
        protocol: tcp
        mode: host
      - target: 53
        published: 53
        protocol: udp
        mode: host
    cap_add:
      - NET_ADMIN
    volumes:
      - ./services/dnsmasq/volumes/etc/dnsmasq:/etc/dnsmasq
      - ./services/dnsmasq/volumes/etc/dnsmasq.conf:/etc/dnsmasq.conf
    entrypoint:
      - dnsmasq
      - -k
    external_links:
      - redis
    extra_hosts:
      - "localhost:127.0.0.1"
    networks:
      - frontend

  redis:
    container_name: Redis
    restart: always
    build: 
      context: ./services/redis/4.0.8
      dockerfile: redis.Dockerfile
      target: runtime
      args:
        TZ: "Asia/Seoul"
    volumes:
      # - redisdata:/data/redis
      # - type: volume
      #   source: redisdata
      #   target: /data/redis
      #   volume:
      #     nocopy: true
      - type: bind
        source: ./volumes/redis
        target: /data/redis
    networks:
      - backend

  nginx:
    container_name: Nginx
    restart: always
    build: 
      context: ./services/nginx/1.14.0
      dockerfile: nginx.Dockerfile
      target: runtime
      args:
        TZ: "Asia/Seoul"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./services/nginx/1.14.0/volumes/etc/nginx/conf.d:/etc/nginx/conf.d
      - ./services/nginx/1.14.0/volumes/etc/nginx/inc.d:/etc/nginx/inc.d
      - ./services/nginx/1.14.0/volumes/etc/nginx/keys:/etc/nginx/keys
      - ./services/nginx/1.14.0/volumes/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /var/log/nginx:/var/log/nginx
      - /var/www:/var/www
    networks:
      - frontend
      - backend
    links:
      # - misagotools
      - confluenceserver
      - jirasoftware

  misagotools:
    container_name: misagotools
    restart: always
    build:
      context: ./services/misagotools
      dockerfile: Laradock.php-fpm.2.5.Dockerfile
      target: runtime
      args:
        TZ: "Asia/Seoul"
        LARADOCK_PHP_VERSION: "7.3"
        INSTALL_PHPREDIS: "true"
        INSTALL_MYSQLI: "true"
        INSTALL_INTL: "true"
        INSTALL_FAKETIME: "true"
        INSTALL_XHPROF: "false"
        INSTALL_PHALCON: "false"
    volumes:
      - ./services/misagotools/volumes/composer:/composer
      - ./services/misagotools/volumes/etc/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./services/misagotools/volumes/etc/php/conf.d/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./services/misagotools/volumes/etc/php/conf.d/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
      - ./services/misagotools/volumes/etc/php/conf.d/xhprof.ini:/usr/local/etc/php/conf.d/xhprof.ini.disable
      - ./services/misagotools/volumes/etc/php/conf.d/phalcon.ini:/usr/local/etc/php/conf.d/phalcon.ini.disable
      - ./services/misagotools/volumes/etc/php/conf.d/xlaravel.pool.conf:/usr/local/etc/php-fpm.d/xlaravel.pool.conf
      - ./volumes/nginx/var/log/nginx:/var/log/nginx
      - /var/www/misagotools:/var/www/misagotools
    # ports:
    #   - 9000:9000
    networks:
      - backend
    links:
      - redis
    depends_on:
      - redis

  confluencedb:
    container_name: ConfluenceDB
    restart: always
    build:
      context: ./services/postgresql/9.6
      dockerfile: postgresql.Dockerfile
      target: runtime
      args:
        TZ: "Asia/Seoul"
    env_file:
      - ./services/postgresql/9.6/confluencedb.env
    volumes:
      - /data/docker/confluence/database:/var/lib/postgresql/data
    # ports:
    #   - 5432:5432
    networks:
      - backend

  jiradb:
    container_name: JiraDB
    restart: always
    build:
      context: ./services/postgresql/9.6
      dockerfile: postgresql.Dockerfile
      target: runtime
      args:
        TZ: "Asia/Seoul"
    env_file:
      - ./services/postgresql/9.6/jiradb.env
    volumes:
      - /data/docker/jira/database:/var/lib/postgresql/data
    # ports:
    #   - 5432:5432
    networks:
      - backend

  confluenceserver:
    container_name: ConfluenceServer
    restart: always
    build:
      context: ./services/confluence-server/7.0.1
      dockerfile: atlassian.confluence-server.Dockerfile
      target: runtime
      args:
        TZ: "Asia/Seoul"
    env_file:
      - ./services/confluence-server/7.0.1/atlassian.confluence-server.env
    volumes:
      - /data/docker/confluence/server:/var/atlassian/application-data/confluence
    # ports:
    #   - 8090:8090
    #   - 8091:8091
    networks:
      - backend
    links:
      - confluencedb
    depends_on:
      - confluencedb

  jirasoftware:
    container_name: JiraSoftware
    restart: always
    build:
      context: ./services/jira-software/8.4.2
      dockerfile: atlassian.jira-software.Dockerfile
      target: runtime
      args:
        TZ: "Asia/Seoul"
    env_file:
      - ./services/jira-software/8.4.2/atlassian.jira-software.env
    volumes:
      - /data/docker/jira/software:/var/atlassian/application-data/jira
    # ports:
    #   - 8090:8090
    #   - 8091:8091
    networks:
      - backend
    links:
      - confluencedb
    depends_on:
      - confluencedb

#  application:
#   dns:
#    - 8.8.8.8
#    - 4.4.4.4
#    - 192.168.9.45
#   volumes_from:
#     - nexus-data
#   networks:
#     - pic

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  # pic:
  #   driver: bridge
  #   ipam:
  #     driver: default
  #     config:
  #       - subnet: 172.18.0.0/16
  #         gateway: 172.18.0.1



# https://docs.docksal.io/core/volumes/
# volumes:
#   data-jira-software:
#     # external: true
#     # name: jira-application-data
#     driver: local
#     driver_opts:
#       type: none
#       device: /data/docker/jira/software
#       o: bind
#   data-confluence-server:
#     driver: local
#     driver_opts:
#       type: none
#       device: /data/docker/confluence/server
#       o: bind


# volumes:
#   data:
#     external:
#       name: jira-application-data